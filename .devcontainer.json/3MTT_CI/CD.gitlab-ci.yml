# Define pipeline stages
stages:
  - build
  - test
  - deploy

# Build stage
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Building Docker image..."
    - docker build -t myapp:$CI_COMMIT_SHORT_SHA .
    - docker tag myapp:$CI_COMMIT_SHORT_SHA registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - main

# Test stage
test:
  stage: test
  image: python:3.9
  script:
    - echo "Running tests..."
    - pip install -r requirements.txt
    - pytest tests/
  only:
    - main

# Deploy stage
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache sshpass
  script:
    - echo "Deploying application..."
    - sshpass -p "$DEPLOY_PASSWORD" ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "
        docker pull registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA &&
        docker stop myapp || true &&
        docker rm myapp || true &&
        docker run -d --name myapp -p 80:80 registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
  environment:
    name: production
    url: http://<your-production-url>
  only:
    - main
